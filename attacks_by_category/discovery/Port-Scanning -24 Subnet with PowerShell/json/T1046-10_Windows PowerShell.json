{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.6996110"},"EventRecordID":"1043","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Registry, Started, \tProviderName=Registry\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=1\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.7390052"},"EventRecordID":"1044","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Alias, Started, \tProviderName=Alias\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=3\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.7390052"},"EventRecordID":"1045","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Environment, Started, \tProviderName=Environment\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=5\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.7390052"},"EventRecordID":"1046","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"FileSystem, Started, \tProviderName=FileSystem\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=7\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.7390052"},"EventRecordID":"1047","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Function, Started, \tProviderName=Function\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=9\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"600"},"Version":"0","Level":"4","Task":"6","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.7390052"},"EventRecordID":"1048","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Variable, Started, \tProviderName=Variable\r\n\tNewProviderState=Started\r\n\r\n\tSequenceNumber=11\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=\r\n\tRunspaceId=\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"400"},"Version":"0","Level":"4","Task":"4","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:46:23.8918405"},"EventRecordID":"1049","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Available, None, \tNewEngineState=Available\r\n\tPreviousEngineState=None\r\n\r\n\tSequenceNumber=13\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=5.1.19041.5007\r\n\tRunspaceId=31a3df53-3acd-49b9-91cc-728607b523c1\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
{"Event":{"System":{"Provider":{"@Name":"PowerShell"},"EventID":{"@Qualifiers":"0","#text":"403"},"Version":"0","Level":"4","Task":"4","Opcode":"0","Keywords":"0x80000000000000","TimeCreated":{"@SystemTime":"2024-10-22 14:48:51.2167938"},"EventRecordID":"1050","Correlation":null,"Execution":{"@ProcessID":"0","@ThreadID":"0"},"Channel":"Windows PowerShell","Computer":"Server002","Security":null},"EventData":{"Data":"Stopped, Available, \tNewEngineState=Stopped\r\n\tPreviousEngineState=Available\r\n\r\n\tSequenceNumber=16\r\n\r\n\tHostName=ConsoleHost\r\n\tHostVersion=5.1.19041.5007\r\n\tHostId=2ec650b9-a9df-477f-bc53-8ae06f7312b9\r\n\tHostApplication=powershell.exe &amp; {$ipAddr = \"\"\r\nif ($ipAddr -eq \"\") {\r\n # Assumes the \"primary\" interface is shown at the top\r\n $interface = Get-NetIPInterface -AddressFamily IPv4 -ConnectionState Connected | Select-Object -ExpandProperty InterfaceAlias -First 1\r\n Write-Host \"[i] Using Interface $interface\"\r\n $ipAddr = Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias $interface | Select-Object -ExpandProperty IPAddress\r\n}\r\nWrite-Host \"[i] Base IP-Address for Subnet: $ipAddr\"\r\n$subnetSubstring = $ipAddr.Substring(0, $ipAddr.LastIndexOf('.') + 1)\r\n# Always assumes /24 subnet\r\nWrite-Host \"[i] Assuming /24 subnet. scanning $subnetSubstring'1' to $subnetSubstring'254'\"\r\n\r\n$ports = 445, 3389\r\n$subnetIPs = 1..254 | ForEach-Object { \"$subnetSubstring$_\" }\r\n\r\nforeach ($ip in $subnetIPs) {\r\n foreach ($port in $ports) {\r\n try {\r\n $tcp = New-Object Net.Sockets.TcpClient\r\n $tcp.ConnectAsync($ip, $port).Wait(200) | Out-Null\r\n } catch {}\r\n if ($tcp.Connected) {\r\n $tcp.Close()\r\n Write-Host \"Port $port is open on $ip\"\r\n }\r\n }\r\n}}\r\n\tEngineVersion=5.1.19041.5007\r\n\tRunspaceId=31a3df53-3acd-49b9-91cc-728607b523c1\r\n\tPipelineId=\r\n\tCommandName=\r\n\tCommandType=\r\n\tScriptName=\r\n\tCommandPath=\r\n\tCommandLine=","Binary":""}}}
